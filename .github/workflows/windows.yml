
# This is a basic workflow to help you get started with Actions

name: Windows Build CI

# Controls when the workflow will run
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.5
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          choco install haxe --version 4.2.5 -y
          mkdir "%HAXELIB_ROOT%"
          haxelib setup "%HAXELIB_ROOT%"
          haxelib install hxcpp > nul
          haxelib install lime
          haxelib install openfl
          haxelib --never install flixel
          haxelib run lime setup flixel
          haxelib run lime setup
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
          haxelib git linc_luajit https://github.com/Leather128/linc_luajit.git
          haxelib install hscript
          haxelib install polymod
          haxelib git hxCodec https://github.com/polybiusproxy/hxCodec
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git flixelTextureAtlas https://github.com/Smokey555/Flixel-TextureAtlas.git
          haxelib git fnf-modcharting-tools https://github.com/TheZoroForce240/FNF-Modcharting-Tools
          haxelib install hxcpp-debug-server
          haxelib list
      - name: Compile
        run: |
          haxelib run lime build windows
      - uses: actions/upload-artifact@v2
        with:
          name: Windows Build
          path: export/release/windows/bin
